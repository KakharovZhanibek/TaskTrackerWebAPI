// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TaskTrackerWebAPI.DAL.Context;

namespace TaskTrackerWebAPI.DAL.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220223191105_addedTestData")]
    partial class addedTestData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TaskTrackerWebAPI.DAL.Entities.ProjectEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("Priority")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 2, 24, 1, 11, 3, 843, DateTimeKind.Local).AddTicks(3491),
                            Name = "Project777",
                            Priority = 2,
                            StartDate = new DateTime(2022, 2, 24, 1, 11, 3, 841, DateTimeKind.Local).AddTicks(8482),
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2021, 11, 24, 1, 11, 3, 843, DateTimeKind.Local).AddTicks(5155),
                            Name = "Project9000",
                            Priority = 3,
                            StartDate = new DateTime(2021, 11, 24, 1, 11, 3, 843, DateTimeKind.Local).AddTicks(5022),
                            Status = 1
                        });
                });

            modelBuilder.Entity("TaskTrackerWebAPI.DAL.Entities.TaskEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int?>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2022, 2, 24, 1, 11, 3, 845, DateTimeKind.Local).AddTicks(1445),
                            Description = "desc1",
                            Name = "Task1",
                            Priority = 3,
                            ProjectId = 1,
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2022, 2, 24, 1, 11, 3, 845, DateTimeKind.Local).AddTicks(2636),
                            Description = "desc2",
                            Name = "Task2",
                            Priority = 4,
                            ProjectId = 1,
                            Status = 0
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2021, 12, 24, 1, 11, 3, 845, DateTimeKind.Local).AddTicks(2684),
                            Description = "desc1",
                            Name = "Task1",
                            Priority = 2,
                            ProjectId = 2,
                            Status = 2
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2022, 1, 24, 1, 11, 3, 845, DateTimeKind.Local).AddTicks(2690),
                            Description = "desc2",
                            Name = "Task2",
                            Priority = 4,
                            ProjectId = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("TaskTrackerWebAPI.DAL.Entities.TaskEntity", b =>
                {
                    b.HasOne("TaskTrackerWebAPI.DAL.Entities.ProjectEntity", "Project")
                        .WithMany("Tasks")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Project");
                });

            modelBuilder.Entity("TaskTrackerWebAPI.DAL.Entities.ProjectEntity", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
